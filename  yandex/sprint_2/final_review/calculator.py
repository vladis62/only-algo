# ID - 100652399
# Смутил тест 26 - на вход поданы операнды 1 2, без оператора
#
# -- ПРИНЦИП РАБОТЫ --
# Я реализовал калькулятор на одном стеке
# Во время итерации все числа добавляются в стек, если элемент - НЕ число,
# забираем два последних числа со стека и производим вычисления.
# В ответе забираем последний элемент из стека
# Алгоритм в задании не читал, решил попробовать сам.
# -- ВРЕМЕННАЯ СЛОЖНОСТЬ --
# O(N) - так как весь алгоритм выполняется за один цикл.
# Добавление и извлечение данных из стека во время цикла - O(1)
# -- ПРОСТРАНСТВЕННАЯ СЛОЖНОСТЬ --
# В худшем случае количество элементов в стеке будет O(n / 2),
# Худший случай - Входные даннные 1 2 3 .. (n/2 + 1) + + + + + + + + (n/2)
# Сначала идет множество операндов, затем множество операторов
# Память O(n)


def calculator(enter):
    numbers = {'*', '/', '+', '-'}
    stack = []
    for e in enter:
        if e in numbers:
            b = stack.pop()
            a = stack.pop()
            stack.append(calculate(a, b, e))
        else:
            stack.append(int(e))
    return stack[-1]


def calculate(a, b, e):
    result = 0
    if e == '*':
        result = a * b
    if e == '/':
        result = a // b
    if e == '+':
        result = a + b
    if e == '-':
        result = a - b
    return result


def main():
    result = calculator(input().split())
    print(result)


if __name__ == '__main__':
    main()
